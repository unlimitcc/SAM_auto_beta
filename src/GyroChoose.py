from z3 import *

#variables
tempFlag = Array('tempFlag', IntSort(), IntSort())
StateFlag = Array('StateFlag', IntSort(), IntSort())
SignFlag = Array('SignFlag', IntSort(), IntSort())
SignFlag_next = Array('SignFlag_next', IntSort(), IntSort())
IStateFlagI = Int('IStateFlagI')
ItempFlagI = Int('ItempFlagI')
ISignFlag_nextI = Int('ISignFlag_nextI')
JoinTotal = Int('JoinTotal')
JoinTotal_next = Int('JoinTotal_next')
gyroStatus0 = Int('gyroStatus0')
gyroStatus0_next = Int('gyroStatus0_next')
sum_temp = Function('sum_temp', IntSort(), IntSort())
sum_gyro = Function('sum_gyro', IntSort(), IntSort())
s = Solver()
i,j = Ints('i j')
k,k1 = Ints('k k1')
#Contract
s.add(i<9)
s.add(ForAll(i, Implies(And(i>=0, i<9), sum_temp(i)==sum_temp(i-1)+tempFlag[i])))
s.add(sum_temp(-1)==0)
s.add(ForAll(i, Implies(And(i>=0, i<9), sum_gyro(i)==sum_gyro(i-1)+(tempFlag[i]*(2**i)))))
s.add(sum_gyro(-1)==0)
Assumptions = (IStateFlagI >= 9)
G1 = (ISignFlag_nextI == 9)
G2 = (ItempFlagI == 9)
G3_1 = (ForAll(i, Implies(And(i>=0, i<9), Implies(StateFlag[i]==235, tempFlag[i]==1))))
G3_2 = (ForAll(i, Implies(And(i>=0, i<9), Implies(StateFlag[i]!=235, tempFlag[i]==0))))
G4 = (JoinTotal_next == sum_temp(8))
G5 = (ForAll(i, Implies(And(i>=0, i<JoinTotal_next), Exists(k, And(SignFlag_next[i]==k, sum_temp(k)==i, Not(Exists(k1, And(k1<k, SignFlag_next[i]==k1, sum_temp(k1)==i))))))))
G6 = (ForAll(i, Implies(And(i>=JoinTotal_next, i<9), SignFlag_next[i]==0)))
G7 = (gyroStatus0_next == sum_gyro(8))
Guarantees = And(G1, G2, G3_1, G3_2, G4, G5, G6, G7)
s.add(Implies(Assumptions, Guarantees))
s.add(Assumptions)
#####
